/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockOracle,
  MockOracleInterface,
} from "../../contracts/MockOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_courseMarket",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "student",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "web2CourseId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "CourseCompletionRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "courseMarket",
    outputs: [
      {
        internalType: "contract CourseMarket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "student",
        type: "address",
      },
      {
        internalType: "string",
        name: "web2CourseId",
        type: "string",
      },
    ],
    name: "notifyCourseCompletion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_courseMarket",
        type: "address",
      },
    ],
    name: "setCourseMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610be3380380610be383398181016040528101906100329190610223565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c919061025f565b60405180910390fd5b6100b4816100fc60201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061027a565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f0826101c5565b9050919050565b610200816101e5565b811461020b57600080fd5b50565b60008151905061021d816101f7565b92915050565b600060208284031215610239576102386101c0565b5b60006102478482850161020e565b91505092915050565b610259816101e5565b82525050565b60006020820190506102746000830184610250565b92915050565b61095a806102896000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806314cbf6dc14610067578063405f070314610085578063715018a6146100a15780638da5cb5b146100ab578063bb7ba8d1146100c9578063f2fde38b146100e5575b600080fd5b61006f610101565b60405161007c919061055a565b60405180910390f35b61009f600480360381019061009a919061070d565b610127565b005b6100a961020a565b005b6100b361021e565b6040516100c09190610778565b60405180910390f35b6100e360048036038101906100de9190610793565b610247565b005b6100ff60048036038101906100fa9190610793565b610302565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8173ffffffffffffffffffffffffffffffffffffffff167f639e205fa27c3c215a654f42e8ee81132524c271fee231079ef4ac53d04236c0824260405161016f929190610858565b60405180910390a2600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166376ce0ab283836040518363ffffffff1660e01b81526004016101d4929190610888565b600060405180830381600087803b1580156101ee57600080fd5b505af1158015610202573d6000803e3d6000fd5b505050505050565b610212610388565b61021c600061040f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61024f610388565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b590610904565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61030a610388565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361037c5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016103739190610778565b60405180910390fd5b6103858161040f565b50565b6103906104d3565b73ffffffffffffffffffffffffffffffffffffffff166103ae61021e565b73ffffffffffffffffffffffffffffffffffffffff161461040d576103d16104d3565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016104049190610778565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061052061051b610516846104db565b6104fb565b6104db565b9050919050565b600061053282610505565b9050919050565b600061054482610527565b9050919050565b61055481610539565b82525050565b600060208201905061056f600083018461054b565b92915050565b6000604051905090565b600080fd5b600080fd5b6000610594826104db565b9050919050565b6105a481610589565b81146105af57600080fd5b50565b6000813590506105c18161059b565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61061a826105d1565b810181811067ffffffffffffffff82111715610639576106386105e2565b5b80604052505050565b600061064c610575565b90506106588282610611565b919050565b600067ffffffffffffffff821115610678576106776105e2565b5b610681826105d1565b9050602081019050919050565b82818337600083830152505050565b60006106b06106ab8461065d565b610642565b9050828152602081018484840111156106cc576106cb6105cc565b5b6106d784828561068e565b509392505050565b600082601f8301126106f4576106f36105c7565b5b813561070484826020860161069d565b91505092915050565b600080604083850312156107245761072361057f565b5b6000610732858286016105b2565b925050602083013567ffffffffffffffff81111561075357610752610584565b5b61075f858286016106df565b9150509250929050565b61077281610589565b82525050565b600060208201905061078d6000830184610769565b92915050565b6000602082840312156107a9576107a861057f565b5b60006107b7848285016105b2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107fa5780820151818401526020810190506107df565b60008484015250505050565b6000610811826107c0565b61081b81856107cb565b935061082b8185602086016107dc565b610834816105d1565b840191505092915050565b6000819050919050565b6108528161083f565b82525050565b600060408201905081810360008301526108728185610806565b90506108816020830184610849565b9392505050565b600060408201905061089d6000830185610769565b81810360208301526108af8184610806565b90509392505050565b7f496e76616c696420616464726573730000000000000000000000000000000000600082015250565b60006108ee600f836107cb565b91506108f9826108b8565b602082019050919050565b6000602082019050818103600083015261091d816108e1565b905091905056fea26469706673582212202e257ad66b3ffdf37fede7480c3d86945b4a5d0f12c7c211c61fb8982189163164736f6c634300081c0033";

type MockOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockOracle__factory extends ContractFactory {
  constructor(...args: MockOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _courseMarket: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_courseMarket, overrides || {});
  }
  override deploy(
    _courseMarket: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_courseMarket, overrides || {}) as Promise<
      MockOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockOracle__factory {
    return super.connect(runner) as MockOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockOracleInterface {
    return new Interface(_abi) as MockOracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockOracle {
    return new Contract(address, _abi, runner) as unknown as MockOracle;
  }
}
